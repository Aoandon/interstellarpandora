{"version":3,"sources":["components/board/board.js","App.js","index.js"],"names":["Board","job","company","desc","logo","isnew","featured","position","role","level","postedAt","contract","location","languages","tools","handleTagClick","tags","push","className","src","alt","map","tag","onClick","App","useState","data","jobs","setJobs","filters","setFilters","searchTerm","setSearchTerm","useEffect","filteredJobs","filter","length","some","includes","console","log","onChange","event","target","value","placeholder","type","passedFilter","f","val","toLowerCase","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec8959e.chunk.js","sourcesContent":["import React from 'react';      \r\n\r\nconst Board = ({ job: { company, desc, logo, isnew, featured, position, role, level, postedAt, contract, location, languages, tools, },handleTagClick,}) => {\r\n    \r\n    const tags = [role, level];\r\n\r\n    if (languages) {\r\n        tags.push(...languages);\r\n    }\r\n    if (tools) {\r\n        tags.push(...tools);\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={`flex flex-col bg-black bg-opacity-80 shadow-lg my-16 mx-10 m-4 p-2 sm:flex-row rounded  ${isnew && 'border-l-4 border-yellow-100 border-solid'}`}>\r\n            <div>\r\n                <img className=\"-mt-16 mb-4 w-20 h-20 sm:mt-0\" src={logo} alt={company} />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col ml-4\">\r\n                <h3 className=\"font-bold text-yellow-50\">{company}\r\n                {isnew && (<span className=\"bg-yellow-100 m-1 p-1 rounded text-xs text-black\">New</span>)}\r\n                {featured && (<span className=\"m1- p-1 text-xs\">Featured</span>)}\r\n                </h3>\r\n                <h2 className=\"font-bold text-ml text-yellow-100 my-2 sm:my-0\">{position}</h2>\r\n                <p className=\"text-white\">{desc}</p>\r\n                <p className=\"text-white\">{postedAt} · {contract} · {location}</p>\r\n            </div>\r\n            <div className=\"flex flex-wrap items-center mt-4 mx-4 pt-4 border-t border-grey-200 border-solid sm:ml-auto sm:border-0\">\r\n                {tags ? (tags.map((tag) => <span onClick={() => handleTagClick(tag)} className=\"  bg-black bg-opacity-60 mr-2 p-2 rounded text-ml text-yellow-100\">{tag}</span>)) : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Board;   ","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport data from './data.json';\nimport Board from './components/board/board';\n\n\nfunction App() {\n\n  const [jobs, setJobs] = useState([data]);\n  const [filters, setFilters] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n\n  const filterFunction = ({role, level, tools, languages}) => {\n\n    if (filters.length === 0) {\n      return true;\n    } \n\n\n\n    const tags = [role, level];\n\n    if (languages) {\n      tags.push(...languages);\n    }\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    return tags.some((tag) => filters.includes(tag));\n  }\n\n  const filteredJobs = jobs.filter(filterFunction);\n\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n\n    setFilters([...filters, tag]);\n  }\n\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  }\n  \n\n  const clearFilters = () => {\n    setFilters([]);\n  }\n\n  console.log(jobs);\n  console.log(filteredJobs)\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Interstellar Pandora</h1>\n      <h2>Find your interstellar Job!</h2>\n      <div className=\"container m-auto\">\n      <div className=\"bg-white flex flex-wrap shadow-md my-16 mx-10 p-6 rounded border-l-4 border-yellow-100 border-solid bg-opacity-50\">\n          <h3 className=\"bg-black flex rounded bg-opacity-80 text-yellow-50 m-1 p-1 sm:mb-0\">Search by Company : </h3>\n          <input onChange={(event) => { setSearchTerm(event.target.value); }} placeholder=\"Search for Company !\" className=\"bg-black flex rounded bg-opacity-80 text-yellow-50 m-1 p-1 cursor-pointer sm:mb-0\" type=\"text\" />  \n          <h3 className=\"bg-black flex rounded bg-opacity-80 text-yellow-50 m-1 p-1 sm:mb-0\">Search by Position : </h3>\n          <input onChange={(event) => { setSearchTerm(event.target.value); }} placeholder=\"Search for Position !\" className=\"bg-black flex rounded bg-opacity-80 text-yellow-50 m-1 p-1 cursor-pointer sm:mb-0\" type=\"text\" />  \n\n        {\n          filters.length > 0 && filters.map((filter) => <span className=\"bg-black flex rounded bg-opacity-80 text-yellow-50 m-1 p-1 cursor-pointer sm:mb-0\" onClick={() => handleFilterClick(filter)}> {filter} ×</span>)\n        }\n        {filters.length === 0 ? ('') :(  <button onClick={clearFilters} className='bg-black flex rounded m-1 p-1 font-bold text-yellow-50 ml-auto'>Clear</button>) }\n        </div>\n        \n        {\n          jobs.length === 0 ? (\n            <p>Jobs are fetching...</p>\n          ) : (\n              filteredJobs.filter((val) => {\n                if (searchTerm == \"\") {\n                  return val\n                } else if (val.company.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return val \n                }\n                else if (val.position.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return val \n                }\n              })  \n              .map((job, key) => (\n          <Board job={job} key={job.id} handleTagClick={handleTagClick}/>   \n        ))\n        )\n    } \n      </div>\n      </div>\n  );\n}\n\nexport default App;\n\n\n\n// TODO \n// 1. Study the design and JSON [X]\n// 2. Create the Job Board Component [X]\n// 3. Get the data from the JSON [X]\n// 4. Pass down the data to the JBC [X]\n// 5. Style It [X]\n// 6. Filter Component [X]\n// 7  . Filter IT [X]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}